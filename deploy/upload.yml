---
- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
  - name: Set Defaults
    set_fact:
      region: '{{ region | default("us-east-1") }}'
      iam_role: '{{ iam_role | default("socorro_pigeon") }}'
      function_name: '{{ function_name | default("socorro_pigeon") }}'
      description: '{{ description | default("queue socorro crash ids when uploaded to s3") }}'
      handler: '{{ handler | default("pigeon.handler") }}'
      memory_size: '{{ memory_size | default(128) }}'
      timeout: '{{ timeout | default(300) }}'
      amqp_host: '{{ amqp_host | default("localhost") }}'
      amqp_password: '{{ amqp_password | default("guest") }}'
      amqp_port: '{{ amqp_port | default(5672) }}'
      amqp_queue: '{{ amqp_queue | default("socorro.normal") }}'
      amqp_user: '{{ amqp_user | default("guest") }}'
      amqp_virtual_host: '{{ amqp_virtual_host | default("/") }}'
  - name: Create Config File
    copy:
      content: |
        host         = '{{ amqp_host }}'
        password     = '{{ amqp_password }}'
        port         =  {{ amqp_port }}
        queue        = '{{ amqp_queue }}'
        user         = '{{ amqp_user }}'
        virtual_host = '{{ amqp_virtual_host }}'
      dest: ./config.py
    register: config
  - name: Inspect pigeon.py
    stat:
      path: pigeon.py
    register: pigeon
  - name: Inspect pika module
    stat:
      path: pika
    register: pika
  - name: Inspect pigeon.zip
    stat:
      path: pigeon.zip
    register: zip
  - name: Install Requirements
    command: pip install pika -t .
    when: pika.stat.islnk is not defined # directory doesn't exist
  - name: Create Zip File
    shell: zip -r pigeon.zip pigeon.py config.py pika
    when: >
      (zip.stat.islnk is not defined)
      or (config | changed)
      or (pigeon.stat.mtime > zip.stat.mtime)
      or (pika.stat.islnk is not defined)
      or (pika.stat.mtime > zip.stat.mtime)
    # zip doesn't exit
    # config changed
    # pigeon is newer than zip
    # pika module didn't exist
    # pike module is newer than zip
  - name: Create IAM Role
    boto3:
      command: iam
      subcommand: create_role
      region: '{{ region }}'
      arguments:
        RoleName: '{{ iam_role }}'
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Principal: {Service: lambda.amazonaws.com}
            Action: sts:AssumeRole
      encode: [AssumeRolePolicyDocument]
      query: Role.Arn
      unless:
        subcommand: get_role
        arguments: {RoleName: '{{ iam_role }}'}
        query: Role.Arn
    register: role
  - name: Create Lambda Function
    lambda_function:
      description: '{{ description }}'
      function_name: '{{ function_name }}'
      handler: '{{ handler }}'
      memory_size: '{{ memory_size }}'
      region: '{{ region }}'
      role: '{{ role.output }}'
      runtime: 'python2.7'
      timeout: '{{ timeout }}'
      zip_file: 'pigeon.zip'
    register: lambda
    until: lambda|success
    retries: 12 # 3 minutes
    delay: 15
